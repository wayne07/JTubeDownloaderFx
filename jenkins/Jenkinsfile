#!groovyâ€‹
//# https://jenkins.io/doc/book/pipeline/
pipeline {
    /* insert Declarative Pipeline here */
    agent any

    environment {
        def JFXRT_HOME = "/opt/java/jdk1.8.0_162"
    }

    stages {
        stage('Clone sources') {
            steps {
                // Get the code from a GitHub repository
                dir('jtube') {
                    git branch: 'jenkinsPipeline', changelog: true, credentialsId: 'githubCredentials', poll: true, url: 'https://github.com/wayne07/JTubeDownloaderFx.git'
                }
                dir('jenkinsJobs') {
                    git branch: 'master', changelog: false, credentialsId: 'githubCredentials', poll: false, url: 'https://github.com/wayne07/jenkins-jobs.git'
                }
            }
        }
        stage('Build') {
            steps {
                echo 'Building..'
                sh 'env'
                sh '$JAVA_HOME/bin/java -version'
                sh 'ls -lha ./jtube'
                sh './jtube/gradlew init'
            }
        }
        stage('Test') {
            input {
                message "Should we continue running Tests?"
                ok "Yes, we should."
                submitter "alice,bob"
                parameters {
                    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                }
            }
            steps {
                echo 'Hello, ${PERSON}, we continue running Tests..'
                sh './jtube/gradlew test'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
                sh './jtube/gradlew jfxDeploy'
            }
        }
    }
}